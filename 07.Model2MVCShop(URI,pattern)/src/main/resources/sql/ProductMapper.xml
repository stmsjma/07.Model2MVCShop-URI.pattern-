<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--	
	UserMapper.xml :: SQL 를 갖는 MetaData 
	
	- MyBatis Framework 은 XML MetaData 를 사용 SQL구문을 관리
	  (SQL은 xml 을 통해 적절히 캡슐화 되어 애플리케이선 외부로 분리함)
	- SQL문의 입력(?) / 출력(?)을 매핑한다.  <== 아래의 select element 참조
 -->		

<mapper namespace = "ProductMapper" >

	<resultMap id="productSelectMap" type="product">
  		<result property="prodNo" column="prod_no" jdbcType="NUMERIC"/>
  		<result property="prodName" column="prod_name" jdbcType="VARCHAR"/>
  		<result property="prodDetail" column="prod_detail" jdbcType="VARCHAR"/>
  		<result property="manuDate" column="manufacture_day" jdbcType="VARCHAR"/>
  		<result property="price" column="price" jdbcType="NUMERIC"/>
  		<result property="fileName" column="image_file" jdbcType="VARCHAR"/>
  		<result property="regDate" column="reg_date" jdbcType="DATE"/>
  		<result property="quanity" column="prod_quanity" jdbcType="NUMERIC"/>
  		<result property="wareHouseCode" column="warehouse_code" jdbcType="VARCHAR"/>
  		<result property="proTranCode" column="tran_status_code" jdbcType="VARCHAR"/>
  	</resultMap>
 
   	<insert 	id="addProduct" 	 parameterType="product">
  		INSERT
		INTO product( prod_no, prod_name,prod_detail,manufacture_day,price,
					 image_file,reg_date,prod_quanity,warehouse_code)
		VALUES (  #{prodNo},
				  #{prodName},
				  #{prodDetail},
				  #{manuDate},
				  #{price},
				  #{fileName},
				  SYSDATE,
				  #{quanity:NUMERIC},
				  #{wareHouseCode} )
  	</insert>
  	
  	<select 	id="getProduct" 	parameterType="java.lang.String" resultMap="productSelectMap" >
  		SELECT
		prod_no, 			
		prod_name, 	
		prod_detail, 		 
		manufacture_day, 				
		price,				
		image_file,
		reg_date,
		prod_quanity,
		warehouse_code
		FROM product   
		WHERE prod_no = #{value}											
  	</select>
  	
  	
  	<update    id="updateProduct" parameterType="product">
  		UPDATE product
  		<set>
  			<if test="prodName != null">	      prod_name   = #{prodName},		 </if>
  			<if test="quanity != null">         prod_quanity  = #{quanity:INTEGER},  </if>
			 								          price   = #{price}
			 								
		</set>
		WHERE prod_no = #{prodNo}	
  	</update>
  			 
	<!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT p.prod_no, p.prod_name,	p.prod_detail,p.manufacture_day,
	  										   p.price,p.image_file,p.reg_date,p.prod_quanity,	
	  										   p.warehouse_code, t.tran_status_code
	  									FROM product p, transaction t
	  									WHERE p.prod_no = t.prod_no(+)
	  										<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				prod_no = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				prod_name = #{searchKeyword}
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				price = #{searchKeyword}
													</if>
												</where>
											</if>
											ORDER BY prod_no DESC ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 <!--
	 <select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	 SELECT
  		prod_no, prod_name, prod_detail, manufacture_day, price, image_file, reg_date
  		FROM product
  		<if test="searchCondition!=null and searchKeyword !='' and searchKeyword !=null">
  			<where>
  				<if test="searchCondition==0 ">prod_no	=			#{searchKeyword}</if>  					
  				<if test="searchCondition==1 ">prod_name like 		#{searchKeyword}</if>
  				<if test="searchCondition==2 ">price =				#{searchKeyword} </if>  	
  		</where> 			
  		</if>
  	</select>
  	-->	
	<!-- SQL : SELECT ROW Count -->
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT
		prod_no, prod_name,	prod_detail,manufacture_day,price,	image_file,
		reg_date,prod_quanity,	warehouse_code
		FROM product 	
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			prod_no = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 			prod_name = #{searchKeyword}
								</if>
								<if test="searchCondition == 2 and searchKeyword !='' ">
						 			price = #{searchKeyword}
								</if>
							</where>
						</if> ) countTable						
	 </select>
  
	  
 </mapper>